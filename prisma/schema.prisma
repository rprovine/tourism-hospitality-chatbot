generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id                 String          @id @default(cuid())
  email              String          @unique
  password           String
  name               String
  type               String
  tier               String          @default("starter")
  subscriptionStatus String          @default("trial")
  primaryColor       String          @default("#0891b2")
  logo               String?
  welcomeMessage     String          @default("Aloha! How can I help you today?")
  businessInfo       Json?
  apiKey             String?         @unique @default(cuid())
  apiKeyCreatedAt    DateTime?
  webhookUrl         String?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  analytics          Analytics[]
  conversations      Conversation[]
  knowledgeBase      KnowledgeBase[]
  subscription       Subscription?
}

model Subscription {
  id                String   @id @default(cuid())
  businessId        String   @unique
  tier              String
  status            String
  billingCycle      String   @default("monthly")
  paymentMethod     String   @default("hubspot")
  paymentStatus     String   @default("pending")
  startDate         DateTime
  endDate           DateTime
  cancelAtPeriodEnd Boolean  @default(false)
  metadata          Json?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  business          Business @relation(fields: [businessId], references: [id], onDelete: Cascade)
}

model Conversation {
  id                String    @id @default(cuid())
  businessId        String
  sessionId         String
  userLocation      String?
  userLanguage      String    @default("en")
  satisfactionScore Int?
  resolutionTime    Int?
  escalated         Boolean   @default(false)
  metadata          Json?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  business          Business  @relation(fields: [businessId], references: [id], onDelete: Cascade)
  messages          Message[]

  @@index([businessId])
  @@index([sessionId])
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  role           String
  content        String
  intent         String?
  confidence     Float?
  language       String       @default("en")
  createdAt      DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId])
}

model KnowledgeBase {
  id         String    @id @default(cuid())
  businessId String
  category   String
  question   String
  answer     String
  keywords   String
  language   String    @default("en")
  priority   Int       @default(0)
  usageCount Int       @default(0)
  lastUsed   DateTime?
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  business   Business  @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@index([businessId])
  @@index([category])
  @@index([language])
}

model Analytics {
  id                 String   @id @default(cuid())
  businessId         String
  date               DateTime @db.Date
  totalConversations Int      @default(0)
  uniqueUsers        Int      @default(0)
  avgResponseTime    Float    @default(0)
  avgSatisfaction    Float?
  languageStats      Json?
  topQuestions       Json?
  peakHours          Json?
  createdAt          DateTime @default(now())
  business           Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  @@unique([businessId, date])
  @@index([businessId])
  @@index([date])
}

model ApiLog {
  id           String   @id @default(cuid())
  businessId   String
  endpoint     String
  method       String
  statusCode   Int
  responseTime Int
  requestBody  Json?
  responseBody Json?
  error        String?
  createdAt    DateTime @default(now())

  @@index([businessId])
  @@index([createdAt])
}
